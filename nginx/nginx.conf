# Production Nginx Configuration for kanpAI
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log warn;
    
    # Basic Settings
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=3r/s;
    
    # Security Headers (Global)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Robots-Tag "noindex, nofollow" always;
    
    # SSL Configuration (uncomment when SSL is setup)
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_prefer_server_ciphers on;
    # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    # ssl_session_timeout 10m;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_tickets off;
    # ssl_stapling on;
    # ssl_stapling_verify on;
    
    # Redirect HTTP to HTTPS (uncomment when SSL is setup)
    # server {
    #     listen 80;
    #     server_name your-domain.com www.your-domain.com;
    #     return 301 https://$server_name$request_uri;
    # }
    
    # Main Frontend Server (HTTP for now, HTTPS when SSL is ready)
    server {
        listen 80;
        server_name your-domain.com www.your-domain.com;
        
        # For SSL setup, use:
        # listen 443 ssl http2;
        # ssl_certificate /etc/nginx/ssl/your-domain.com.crt;
        # ssl_certificate_key /etc/nginx/ssl/your-domain.com.key;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        
        # API Proxy to Backend
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://backend:3002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Authentication endpoints (stricter rate limiting)
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://backend:3002;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check (no rate limiting)
        location /api/health {
            access_log off;
            proxy_pass http://backend:3002;
            proxy_set_header Host $host;
        }
        
        # Static files from React build
        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Security: Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(env|config|log|bak)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Main health endpoint for load balancer
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
    }
    
    # Admin Panel (Separate subdomain)
    server {
        listen 80;
        server_name admin.your-domain.com;
        
        # For SSL setup, use:
        # listen 443 ssl http2;
        # ssl_certificate /etc/nginx/ssl/admin.your-domain.com.crt;
        # ssl_certificate_key /etc/nginx/ssl/admin.your-domain.com.key;
        
        # Enhanced security for admin panel
        limit_req zone=auth burst=3 nodelay;
        
        # IP whitelist for admin access (uncomment and configure)
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;
        
        # Admin API routes
        location /api/ {
            proxy_pass http://backend:3002;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Admin frontend (if you build a separate admin app)
        location / {
            # For now, redirect to main app with admin path
            return 301 http://your-domain.com/admin;
            
            # Uncomment when admin frontend is ready:
            # proxy_pass http://admin-frontend:3001;
            # proxy_set_header Host $host;
        }
    }
}